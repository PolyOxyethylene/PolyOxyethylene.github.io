<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Oxyethylene&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-10-11T11:40:22.205Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>氧乙烯</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++笔记: 类 (一)</title>
    <link href="http://example.com/2021/10/11/C-%E7%AC%94%E8%AE%B0-%E7%B1%BB-%E4%B8%80/"/>
    <id>http://example.com/2021/10/11/C-%E7%AC%94%E8%AE%B0-%E7%B1%BB-%E4%B8%80/</id>
    <published>2021-10-11T10:38:36.000Z</published>
    <updated>2021-10-11T11:40:22.205Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    C++是笔者这学期最重要的专业课之一。目前上课内容已简单介绍完C++的类的相关知识。</p><p>​    但是由于老师上课时的解析比较有深度，目前我对于C++类的认识还比较浅显，所以打算再花点时间自学并整理一遍相关内容。</p><p>​    <span id="more"></span></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>​    类即类型的简称，用于描述对象的共同属性和方法。在C++中，类可以使用<code>struct</code>、<code>class</code>或者<code>union</code>来定义。其中，类的属性用数据成员表示，类的方法用函数成员来表示。类的成员可以使用保留字<code>private</code>、<code>public</code>或者<code>protected</code>来标识访问权限。</p><h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><p>​    对象及类的实例，也就是某个类的值，它可以是一个变量，也可以是一个常量。类是一种__数据结构__，而对象代表了一段__内存__，存储了数据结构的值。当产生一个对象时，必须调用__构造函数__初始化对象；当一个对象“死亡”时，则需要调用__析构函数__释放对象占用的资源。</p><h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><p>​    构造函数是类封装的特殊的实例函数成员，用于对对象的数据成员进行初始化，<u>对象必须初始化且仅能初始化一次</u>。</p><p>​    构造函数为对象申请各种资源用于初始化。除了隐含参数<code>this</code>外，构造函数还可以自带若干参数；如果类没有自定义构造函数，则C++编译程序可能会生成默认构造函数。<strong>默认构造函数</strong>是参数表无参的函数，它会为维护多态或晚期绑定进行必要的初始化。</p><p>​    构造函数与类名同名。</p><h4 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h4><p>​    析构函数也是类封装的特殊的实例函数成员，用于对数据成员申请的资源进行回收。</p><p>​    析构函数是和类名同名且名前带有<strong>“ ~ ”</strong>的实例函数成员。</p><p>​    </p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;​    C++是笔者这学期最重要的专业课之一。目前上课内容已简单介绍完C++的类的相关知识。&lt;/p&gt;
&lt;p&gt;​    但是由于老师上课时的解析比较有深度，目前我对于C++类的认识还比较浅显，所以打算再花点时间自学并整理一遍相关内容。&lt;/p&gt;
&lt;p&gt;​</summary>
    
    
    
    <category term="学习" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="C++" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
</feed>
